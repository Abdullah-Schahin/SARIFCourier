name: Release Action

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Build and pack action
        run: npm run pack

      - name: Get latest release version
        id: get_latest_version
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            const releases = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 1
            });
            let latest = '0.0.0';
            if (releases.data.length > 0) {
              const tag = releases.data[0].tag_name.replace(/^v/, '');
              latest = tag;
            }
            const parts = latest.split('.').map(Number);
            if (parts.length !== 3 || parts.some(isNaN)) {
              core.setFailed('Latest release tag is not semver.');
              return;
            }
            // Increment patch version
            return `v${parts[0]}.${parts[1]}.${parts[2] + 1}`;

      - name: Generate release notes
        id: notes
        uses: release-drafter/release-drafter@v6
        with:
          config-name: release-drafter.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_latest_version.outputs.result }}
          name: Release ${{ steps.get_latest_version.outputs.result }}
          body: ${{ steps.notes.outputs.body }}
          files: |
            dist/**
            action.yml
            README.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update stable tag (v1)
        if: success()
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git tag -f v1
          git push -f origin v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
